apiVersion: v1
kind: Secret
metadata:
  namespace: kube-system
  name: cluster-registration
stringData:
  RANCHER_BEARER_TOKEN: "<your-token>"
  RANCHER_HOSTNAME: "<your-RMS-FQDN>"
  CLUSTER_NAME: "<your-cluster-name>"

---

apiVersion: v1
kind: ConfigMap
metadata:
  namespace: kube-system
  name: cluster-registration
data:
  cluster-registration.sh: |
    #!/usr/bin/env bash
    set -xe
    if ! kubectl get namespace cattle-system; then
    # Create cluster and extract cluster ID
    RESP=`curl -ks "https://${RANCHER_HOSTNAME}/v3/cluster" -H 'content-type: application/json' -H "Authorization: Bearer $RANCHER_BEARER_TOKEN" --data-binary '{"type":"cluster","name":"'${CLUSTER_NAME}'","import":true}'`
    CLUSTERID=`echo $RESP | jq -r .id`
    echo "Cluster ID: ${CLUSTERID}"
    # Generate registration token
    ID=`curl -ks "https://${RANCHER_HOSTNAME}/v3/clusters/${CLUSTERID}/clusterregistrationtoken" -H 'content-type: application/json' -H "Authorization: Bearer $RANCHER_BEARER_TOKEN" --data-binary '{"type":"clusterRegistrationToken","clusterId":"'$CLUSTERID'"}' | jq -r .id`
    sleep 2
    # Extract Registration Command
    COMMAND=`curl -ks "https://${RANCHER_HOSTNAME}/v3/clusters/${CLUSTERID}/clusterregistrationtoken/$ID" -H 'content-type: application/json' -H "Authorization: Bearer $RANCHER_BEARER_TOKEN" | jq -r .insecureCommand`
    echo -p "Insecure Command: \n${COMMAND}"
    # Uncomment to execute registration command
    eval "${COMMAND}"
    fi

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-registration
subjects:
- kind: ServiceAccount
  name: cluster-registration
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: kube-system
  name: cluster-registration

---

apiVersion: batch/v1
kind: Job
metadata:
  namespace: kube-system
  name: cluster-registration
spec:
  backoffLimit: 10
  template:
    spec:
      serviceAccountName: cluster-registration
      restartPolicy: Never
      containers:
        - name: cluster-registration
          image: yankcrime/kubectl-jq:latest
          command:
            - bash
            - /app/cluster-registration.sh
          volumeMounts:
            - mountPath: /app
              name: script
          envFrom:
            - secretRef:
                name: cluster-registration
      volumes:
        - name: script
          configMap:
            name: cluster-registration
